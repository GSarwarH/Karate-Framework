{"failedCount":1,"prefixedPath":"classpath:examples\/users\/EndToEndTestingOneMethod.feature","packageQualifiedName":"examples.users.EndToEndTestingOneMethod","loopIndex":-1,"relativePath":"examples\/users\/EndToEndTestingOneMethod.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":91311800,"millis":91.3118,"status":"passed"},"step":{"background":true,"line":5,"prefix":"*","index":0,"text":"def requestJsonBody = read('body.json')"},"stepLog":"12:46:19.235 karate.env system property was: null \n"},{"result":{"nanos":10032600,"millis":10.0326,"status":"passed"},"step":{"background":true,"line":6,"prefix":"*","index":1,"text":"def dataGenerator = Java.type('examples.users.DataGeneratorOneMethod')"}},{"result":{"nanos":41509900,"errorMessage":"js failed:\n>>>>\n01: dataGenerator.getValues().email\n<<<<\norg.graalvm.polyglot.PolyglotException: TypeError: invokeMember (getValues) on examples.users.DataGeneratorOneMethod failed due to: Unknown identifier: getValues\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/EndToEndTestingOneMethod.feature:7","millis":41.5099,"status":"failed"},"step":{"background":true,"line":7,"prefix":"*","index":2,"text":"set requestJsonBody.primaryPerson.email = dataGenerator.getValues().email"},"stepLog":"12:46:19.451 classpath:examples\/users\/EndToEndTestingOneMethod.feature:7\n* set requestJsonBody.primaryPerson.email = dataGenerator.getValues().email\njs failed:\n>>>>\n01: dataGenerator.getValues().email\n<<<<\norg.graalvm.polyglot.PolyglotException: TypeError: invokeMember (getValues) on examples.users.DataGeneratorOneMethod failed due to: Unknown identifier: getValues\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/EndToEndTestingOneMethod.feature:7\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"background":true,"line":8,"prefix":"*","index":3,"text":"set requestJsonBody.primaryPerson.title = dataGenerator.getValues().title"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"background":true,"line":9,"prefix":"*","index":4,"text":"set requestJsonBody.primaryPerson.firstName = dataGenerator.getValues().firstName"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"background":true,"line":10,"prefix":"*","index":5,"text":"set requestJsonBody.primaryPerson.lastName = dataGenerator.getValues().lastName"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"background":true,"line":11,"prefix":"*","index":6,"text":"set requestJsonBody.primaryPerson.gender = dataGenerator.getValues().gender"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"background":true,"line":12,"prefix":"*","index":7,"text":"set requestJsonBody.primaryPerson.maritalStatus = dataGenerator.getValues().maritalStatus"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"background":true,"line":13,"prefix":"*","index":8,"text":"set requestJsonBody.primaryPerson.employmentStatus = dataGenerator.getValues().employmentStatus"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"background":true,"line":14,"prefix":"*","index":9,"text":"set requestJsonBody.primaryPerson.dateOfBirth = dataGenerator.getValues().dateOfBirth"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"background":true,"line":15,"prefix":"*","index":10,"text":"set requestJsonBody.primaryPerson.languagePref = dataGenerator.getValues().languagePref"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"background":true,"line":16,"prefix":"*","index":11,"text":"set requestJsonBody.primaryPersonMailingAddress.addressType = dataGenerator.getValues().addressType"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"background":true,"line":17,"prefix":"*","index":12,"text":"set requestJsonBody.primaryPersonMailingAddress.addressLine1 = dataGenerator.getValues().addressLine1"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"background":true,"line":18,"prefix":"*","index":13,"text":"set requestJsonBody.primaryPersonMailingAddress.city = dataGenerator.getValues().city"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"background":true,"line":19,"prefix":"*","index":14,"text":"set requestJsonBody.primaryPersonMailingAddress.state = dataGenerator.getValues().state"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"background":true,"line":20,"prefix":"*","index":15,"text":"set requestJsonBody.primaryPersonMailingAddress.postalCode = dataGenerator.getValues().postalCode"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"background":true,"line":21,"prefix":"*","index":16,"text":"set requestJsonBody.primaryPersonMailingAddress.countryCode = dataGenerator.getValues().countryCode"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"background":true,"line":22,"prefix":"*","index":17,"text":"set requestJsonBody.primaryPersonPhone.phoneNumber = dataGenerator.getValues().phoneNumber"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"background":true,"line":23,"prefix":"*","index":18,"text":"set requestJsonBody.primaryPersonPhone.phoneExtension = dataGenerator.getValues().phoneExtension"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"background":true,"line":24,"prefix":"*","index":19,"text":"set requestJsonBody.primaryPersonPhone.phoneTime = dataGenerator.getValues().phoneTime"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"background":true,"line":25,"prefix":"*","index":20,"text":"set requestJsonBody.primaryPersonPhone.phoneType = dataGenerator.getValues().phoneType"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"background":true,"line":26,"prefix":"Given","index":21,"text":"url 'https:\/\/www.test-insurance.com\/api\/v1'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":30,"prefix":"Given","index":0,"text":"path '\/user'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":31,"prefix":"When","index":1,"text":"request requestJsonBody"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":32,"prefix":"And","index":2,"text":"print requestJsonBody"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":33,"prefix":"When","index":3,"text":"method post"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":34,"prefix":"Then","index":4,"text":"status 200"}}],"line":29,"description":"","durationMillis":142.8543,"failed":true,"error":"js failed:\n>>>>\n01: dataGenerator.getValues().email\n<<<<\norg.graalvm.polyglot.PolyglotException: TypeError: invokeMember (getValues) on examples.users.DataGeneratorOneMethod failed due to: Unknown identifier: getValues\n- <js>.:program(Unnamed:1)\n\nclasspath:examples\/users\/EndToEndTestingOneMethod.feature:7","tags":["json"],"executorName":"main","name":"payload request scenario","startTime":1637775979157,"refId":"[1:29]","endTime":1637775979452,"exampleIndex":-1}],"callDepth":0,"name":"Hawks API testing with json body","description":"","resultDate":"2021-11-24 12:46:19 PM","durationMillis":142.8543,"passedCount":0}